{"version":3,"sources":["componentes/Header.js","componentes/Formulario.js","helpers.js","componentes/Mensaje.js","componentes/Resultado.js","componentes/Spinner.js","App.js","reportWebVitals.js","index.js"],"names":["Header","titulo","Formulario","props","cantidad","guardarCantidad","plazo","guardarPlazo","guardarTotal","guardarCargando","useState","error","guardarError","onSubmit","e","preventDefault","setTimeout","total","totalCantidad","console","log","totalPlazo","calcularTotal","className","type","placeholder","onChange","parseInt","target","value","Mensaje","Resultado","toFixed","Spinner","App","componente","cargando","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0d3fb583.chunk.js","sourcesContent":["import React, { Fragment } from 'react';\r\n// function Header({ titulo }){\r\n\r\n//     console.log(titulo);\r\n\r\n\r\n//     return(\r\n//         <Fragment>\r\n//             <h1>{ titulo }</h1>\r\n//         </Fragment>\r\n//     )\r\n// }\r\n\r\nconst Header = ({ titulo }) => {\r\n    return ( \r\n        <Fragment>\r\n            <h1>{ titulo }</h1>\r\n        </Fragment>\r\n    );\r\n}\r\n \r\n\r\nexport default Header;","import React, { useState, Fragment } from 'react';\r\nimport { calcularTotal } from \"../helpers\";\r\n\r\nconst Formulario = (props) => {\r\n\r\n    const { cantidad, guardarCantidad, plazo, guardarPlazo , guardarTotal, guardarCargando} = props;\r\n        //Definir el state\r\n    //No podremos usar esata constante de aqui a un padre debemos moverla\r\n    // const [cantidad, guardarCantidad]= useState(0);\r\n\r\n\r\n    /* En caso de crear una funcion */\r\n    // const leerCantidad = (e) => {\r\n    //     // console.log(e.target.value);\r\n    //     guardarCantidad( parseInt( e.target.value ) );\r\n    // }\r\n    /* Aqui termina la funcion */\r\n\r\n    const [ error, guardarError ] = useState(false);\r\n\r\n\r\n    //Cuando el usuario hace submit\r\n    const calcularPrestamo = (e) => {\r\n        e.preventDefault();\r\n        // console.log(\"Enviando formulario\");\r\n\r\n        //Validar\r\n\r\n        if ( cantidad === 0 ||  plazo === '') {\r\n            // console.log(\"Hay un error\");\r\n            guardarError(true);\r\n            return;\r\n        }\r\n        //Eliminar el error previo\r\n        guardarError(false);\r\n\r\n        //Para realizar el spinner\r\n        guardarCargando(true);\r\n\r\n        //Para realizar los calculos despues de 3 segundos\r\n        setTimeout(()=>{\r\n             // Realizar la cotizacion\r\n            const total = calcularTotal(cantidad, plazo);\r\n        \r\n\r\n            //Una vez calculado guardar total\r\n            guardarTotal(total);\r\n\r\n            // Deshabilirar el spinner\r\n            guardarCargando(false);\r\n        }, 3000);\r\n\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <form onSubmit = { calcularPrestamo }>\r\n            { cantidad }\r\n                <div className=\"row\">\r\n                    <div>\r\n                        <label>Cantidad Prestamo</label>\r\n                        <input\r\n                            className=\"u-full-width\" \r\n                            type=\"number\" \r\n                            placeholder=\"Ejemplo: 3000\"\r\n                            /*En caso de crear un funcion */\r\n                            // onChange = { leerCantidad } \r\n                            /* Aqui termina el llamado */\r\n                            /* De manera directa sin crear una funcion */\r\n                            onChange = { e => guardarCantidad( parseInt( e.target.value ) ) }\r\n                        />\r\n                    </div>\r\n                    <div>\r\n                        <label>Plazo para Pagar</label>\r\n                        <select \r\n                            className=\"u-full-width\"\r\n                            onChange = { e => guardarPlazo( parseInt( e.target.value ) ) }\r\n                        >\r\n                            <option value=\"\">Seleccionar</option>\r\n                            <option value=\"3\">3 meses</option>\r\n                            <option value=\"6\">6 meses</option>\r\n                            <option value=\"12\">12 meses</option>\r\n                            <option value=\"24\">24 meses</option>\r\n                        </select>\r\n                    </div>\r\n                    <div>\r\n                        <input \r\n                            type=\"submit\" \r\n                            value=\"Calcular\" \r\n                            className=\"button-primary u-full-width\" \r\n                        />\r\n                    </div>\r\n                </div>\r\n            </form>\r\n            {/* cuando error este en true ejecuta el codigo caso contrario nada */}\r\n            { (error) ?  <p className=\"error\">Todos los campos son obligatorios</p> : ''}\r\n        </Fragment>\r\n    );\r\n\r\n}\r\n\r\nexport default Formulario;","export function calcularTotal(cantidad, plazo){\r\n    //Cantidades\r\n    // 0 - 1000 =25\r\n    // 1001 - 5000 = 20\r\n    //5001 - 10000 = 15\r\n    // +100000 = 10\r\n    let totalCantidad;\r\n    if (cantidad <= 1000) {\r\n        totalCantidad = cantidad*.25;\r\n    } else if (cantidad > 1000 && cantidad<=5000){\r\n        totalCantidad = cantidad * .20;\r\n    } else if(cantidad >5000 && cantidad <= 10000){\r\n        totalCantidad = cantidad*.15\r\n    } else {\r\n        totalCantidad = cantidad*.10\r\n    }\r\n\r\n    console.log(totalCantidad);\r\n\r\n    //Calcular el plazo\r\n\r\n    let totalPlazo = 0;\r\n    switch (plazo) {\r\n        case 3:\r\n            totalPlazo = cantidad*.05;\r\n            break;\r\n        case 6:\r\n            totalPlazo = cantidad*.10;\r\n            break;\r\n        case 12:\r\n            totalPlazo = cantidad*.15;\r\n            break;\r\n        case 24:\r\n            totalPlazo = cantidad*.20\r\n            break;\r\n        default:\r\n            break;\r\n    }\r\n\r\n    return totalPlazo + totalCantidad + cantidad;\r\n}\r\n\r\n","import React from 'react';\r\n\r\nconst Mensaje = () => (\r\n\r\n    <p>Agrega una cantidad o plazo a pagar para cotizar</p>\r\n\r\n);\r\n\r\nexport default Mensaje;","import React from 'react'\r\n\r\n\r\nconst Resultado = ({ total, plazo, cantidad  }) => (\r\n      <div className=\"u-full-width resultado\">\r\n         <h2>Resumen</h2>\r\n         <p>La cantidad solicitada es : ${cantidad}</p>\r\n         <p>A pagar en : {plazo} Meses</p>\r\n         <p>Su pago mensual es de : ${ (total / plazo).toFixed(2) }</p>\r\n         <p>Total a pagar : ${total.toFixed(2)}</p>\r\n      </div>\r\n);\r\n\r\nexport default Resultado;","import React from 'react';\r\nimport './Spinner.css';\r\n\r\nconst Spinner = () => {\r\n    return ( \r\n        <div className=\"spinner\">\r\n        <div className=\"dot1\"></div>\r\n        <div className=\"dot2\"></div>\r\n        </div>\r\n    );\r\n}\r\n \r\nexport default Spinner;","import React, { Fragment, useState } from 'react';\nimport Header from './componentes/Header'\nimport Formulario from \"./componentes/Formulario\";\nimport Mensaje from \"./componentes/Mensaje\";\nimport Resultado from \"./componentes/Resultado\";\nimport Spinner from \"./componentes/Spinner\";\n\nfunction App() {\n\n  //Definir el state\n  const [cantidad, guardarCantidad]= useState(0);\n  const [plazo, guardarPlazo]= useState('');\n  const [total, guardarTotal] = useState(0);\n  //Para el spinner\n  const [cargando, guardarCargando] = useState(false);\n\n  let componente;\n\n  if (cargando) {\n    componente = <Spinner />\n  } else if (total === 0) {\n    componente = <Mensaje />\n  } else {\n    componente = <Resultado \n      total = { total }\n      plazo = { plazo }\n      cantidad = { cantidad }\n    />\n  }\n\n  return (\n    <Fragment>\n      <Header \n        titulo = \"Cotizador de prestamos\"\n      />\n      <div className=\"container\">\n        <Formulario \n          cantidad = { cantidad }\n          guardarCantidad = { guardarCantidad }\n          plazo = { plazo }\n          guardarPlazo = { guardarPlazo }\n          guardarTotal = { guardarTotal }\n          guardarCargando = { guardarCargando }\n        />\n        <div className = \"mensajes\">\n          { componente }\n        </div>\n      </div>\n      \n    </Fragment>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}